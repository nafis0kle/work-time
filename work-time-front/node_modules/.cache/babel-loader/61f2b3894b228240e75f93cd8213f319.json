{"ast":null,"code":"import { createElement } from 'react';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".dimmer {\\r\\n    background: rgba(0, 0, 0, 0);\\r\\n    pointer-events: none;\\r\\n    cursor: pointer;\\r\\n    position: fixed;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    width: 120vw;\\r\\n    height: 120vh;\\r\\n    \\r\\n    transition: 0.3s;\\r\\n}\\r\\n\\r\\n.dimmer-active {\\r\\n    background: rgba(0, 0, 0, 0.5);\\r\\n    backdrop-filter: blur(1.5px) saturate(85%);\\r\\n    pointer-events: visible;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\";\nstyleInject(css_248z);\n\nvar ReactDimmer = function ReactDimmer(_ref) {\n  var isOpen = _ref.isOpen,\n      exitDimmer = _ref.exitDimmer,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 100 : _ref$zIndex,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? 0 : _ref$blur,\n      _ref$saturate = _ref.saturate,\n      saturate = _ref$saturate === void 0 ? 100 : _ref$saturate,\n      _ref$transition = _ref.transition,\n      transition = _ref$transition === void 0 ? 0.3 : _ref$transition;\n  var defaultStyle = {\n    zIndex: zIndex.toString(),\n    background: 'rgba(0, 0, 0, 0)',\n    backdropFilter: \"blur(0px) saturate(100%)\",\n    transition: transition + \"s\"\n  };\n  var activeStyle = {\n    zIndex: zIndex.toString(),\n    background: \"rgba(0, 0, 0, \" + opacity + \")\",\n    backdropFilter: \"blur(\" + blur + \"px) saturate(\" + saturate + \"%)\",\n    transition: transition + \"s\"\n  };\n  return createElement(\"div\", {\n    style: isOpen ? activeStyle : defaultStyle,\n    onClick: function onClick() {\n      exitDimmer(false);\n    },\n    className: \"dimmer \" + (isOpen ? 'dimmer-active' : '')\n  });\n};\n\nexport { ReactDimmer };","map":{"version":3,"mappings":";;AAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;EAC7B,IAAKA,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAG,EAAN;EACtB,IAAIC,QAAQ,GAAGD,GAAG,CAACC,QAAnB;;EAEA,IAAI,CAACF,GAAD,IAAQ,OAAOG,QAAP,KAAoB,WAAhC,EAA6C;IAAE;EAAS;;EAExD,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACE,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAA5B;EACA,IAAIC,KAAK,GAAGH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CAAZ;EACAD,KAAK,CAACE,IAAN,GAAa,UAAb;;EAEA,IAAIN,QAAQ,KAAK,KAAjB,EAAwB;IACtB,IAAIE,IAAI,CAACK,UAAT,EAAqB;MACnBL,IAAI,CAACM,YAAL,CAAkBJ,KAAlB,EAAyBF,IAAI,CAACK,UAA9B;IACD,CAFD,MAEO;MACLL,IAAI,CAACO,WAAL,CAAiBL,KAAjB;IACD;EACF,CAND,MAMO;IACLF,IAAI,CAACO,WAAL,CAAiBL,KAAjB;EACD;;EAED,IAAIA,KAAK,CAACM,UAAV,EAAsB;IACpBN,KAAK,CAACM,UAAN,CAAiBC,OAAjB,GAA2Bb,GAA3B;EACD,CAFD,MAEO;IACLM,KAAK,CAACK,WAAN,CAAkBR,QAAQ,CAACW,cAAT,CAAwBd,GAAxB,CAAlB;EACD;AACH;;;;;ICZae,WAAW,GAAG,SAAdA,WAAc;MAAGC;MAAQC;yBAAYC;MAAAA,kCAAS,GAATA,GAASC;0BAAKC;MAAAA,oCAAU,GAAVA,GAAUC;uBAAKC;MAAAA,8BAAO,CAAPA,GAAOC;2BAAGC;MAAAA,sCAAW,GAAXA,GAAWC;6BAAKC;MAAAA,0CAAa,GAAbA,GAAaC;EACpH,IAAMC,YAAY,GAAG;IAAEV,MAAM,EAAEA,MAAM,CAACW,QAAPX,EAAV;IAA6BY,UAAU,EAAE,kBAAzC;IAA6DC,cAAc,4BAA3E;IAAyGL,UAAU,EAAKA,UAAL;EAAnH,CAArB;EACA,IAAMM,WAAW,GAAG;IAAEd,MAAM,EAAEA,MAAM,CAACW,QAAPX,EAAV;IAA6BY,UAAU,qBAAmBV,OAAnB,MAAvC;IAAsEW,cAAc,YAAUT,IAAV,qBAA8BE,QAA9B,OAApF;IAAgIE,UAAU,EAAKA,UAAL;EAA1I,CAApB;EAEA,OACEO;IACE3B,KAAK,EAAEU,MAAM,GAAGgB,WAAH,GAAiBJ,YADhC;IAEEM,OAAO,EAAE;MACPjB,UAAU,CAAC,KAAD,CAAVA;IACD,CAJH;IAKEkB,SAAS,eAAYnB,MAAM,GAAG,eAAH,GAAqB,EAAvC;EALX,EADF;AAJK","names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ReactDimmer","isOpen","exitDimmer","zIndex","_ref$zIndex","opacity","_ref$opacity","blur","_ref$blur","saturate","_ref$saturate","transition","_ref$transition","defaultStyle","toString","background","backdropFilter","activeStyle","React","onClick","className"],"sources":["C:\\big-projects\\work-time\\work-time-front\\node_modules\\react-dimmer\\node_modules\\style-inject\\dist\\style-inject.es.js","C:\\big-projects\\work-time\\work-time-front\\node_modules\\react-dimmer\\src\\react-dimmer.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\r\nimport './react-dimmer.css';\r\n\r\nexport interface IDimmerProps {\r\n  isOpen: boolean;\r\n  exitDimmer: (action: boolean) => void;\r\n  zIndex?: number;\r\n  opacity?: number;\r\n  blur?: number;\r\n  saturate?: number;\r\n  transition?: number;\r\n}\r\n\r\nexport const ReactDimmer = ({ isOpen, exitDimmer, zIndex = 100, opacity = 0.5, blur = 0, saturate = 100, transition = 0.3 }: IDimmerProps) => {\r\n  const defaultStyle = { zIndex: zIndex.toString(), background: 'rgba(0, 0, 0, 0)', backdropFilter: `blur(0px) saturate(100%)`, transition: `${transition}s` };\r\n  const activeStyle = { zIndex: zIndex.toString(), background: `rgba(0, 0, 0, ${opacity})`, backdropFilter: `blur(${blur}px) saturate(${saturate}%)`, transition: `${transition}s` };\r\n\r\n  return (\r\n    <div\r\n      style={isOpen ? activeStyle : defaultStyle}\r\n      onClick={() => {\r\n        exitDimmer(false);\r\n      }}\r\n      className={`dimmer ${isOpen ? 'dimmer-active' : ''}`}\r\n    ></div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}