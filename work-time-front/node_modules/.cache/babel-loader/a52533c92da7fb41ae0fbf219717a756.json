{"ast":null,"code":"import axios from \"axios\";\nexport default class TaskService {\n  static async get(taskUri) {\n    return (await axios.get(taskUri)).data;\n  }\n\n  static async getAll() {\n    const response = await axios.get(\"http://localhost:8080/tasks\");\n    return response.data._embedded.tasks;\n  }\n\n  static async getAllByStatus(status) {\n    const response = await axios.get(\"http://localhost:8080/tasks/search/findAllByStatus?status=\" + status);\n    return response.data._embedded.tasks;\n  }\n\n  static async getAllByStatusIn(statuses) {\n    const response = await axios.get(\"http://localhost:8080/tasks/search/findAllByStatusIn?statuses=\" + statuses);\n    return response.data._embedded.tasks;\n  }\n\n  static async create(task) {\n    await axios.post(\"http://localhost:8080/tasks\", task);\n  }\n\n  static async update(taskUri, updatedTask) {\n    await axios.patch(taskUri, updatedTask);\n  }\n\n  static async remove(removedTaskUri) {\n    await axios.delete(removedTaskUri);\n  }\n\n}","map":{"version":3,"names":["axios","TaskService","get","taskUri","data","getAll","response","_embedded","tasks","getAllByStatus","status","getAllByStatusIn","statuses","create","task","post","update","updatedTask","patch","remove","removedTaskUri","delete"],"sources":["C:/big-projects/work-time/work-time-front/src/API/TaskService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class TaskService {\r\n    static async get(taskUri) {\r\n        return (await axios.get(taskUri)).data;\r\n    }\r\n\r\n    static async getAll() {\r\n        const response = await axios.get(\"http://localhost:8080/tasks\");\r\n        return response.data._embedded.tasks;\r\n    }\r\n\r\n    static async getAllByStatus(status) {\r\n        const response = await axios.get(\"http://localhost:8080/tasks/search/findAllByStatus?status=\" + status);\r\n        return response.data._embedded.tasks;\r\n    }\r\n\r\n    static async getAllByStatusIn(statuses) {\r\n        const response = await axios.get(\"http://localhost:8080/tasks/search/findAllByStatusIn?statuses=\" + statuses);\r\n        return response.data._embedded.tasks;\r\n    }\r\n\r\n    static async create(task) {\r\n        await axios.post(\"http://localhost:8080/tasks\", task);\r\n    }\r\n\r\n    static async update(taskUri, updatedTask) {\r\n        await axios.patch(taskUri, updatedTask);\r\n    }\r\n\r\n    static async remove(removedTaskUri) {\r\n        await axios.delete(removedTaskUri);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,CAAkB;EACb,aAAHC,GAAG,CAACC,OAAD,EAAU;IACtB,OAAO,CAAC,MAAMH,KAAK,CAACE,GAAN,CAAUC,OAAV,CAAP,EAA2BC,IAAlC;EACH;;EAEkB,aAANC,MAAM,GAAG;IAClB,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACE,GAAN,CAAU,6BAAV,CAAvB;IACA,OAAOI,QAAQ,CAACF,IAAT,CAAcG,SAAd,CAAwBC,KAA/B;EACH;;EAE0B,aAAdC,cAAc,CAACC,MAAD,EAAS;IAChC,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACE,GAAN,CAAU,+DAA+DQ,MAAzE,CAAvB;IACA,OAAOJ,QAAQ,CAACF,IAAT,CAAcG,SAAd,CAAwBC,KAA/B;EACH;;EAE4B,aAAhBG,gBAAgB,CAACC,QAAD,EAAW;IACpC,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACE,GAAN,CAAU,mEAAmEU,QAA7E,CAAvB;IACA,OAAON,QAAQ,CAACF,IAAT,CAAcG,SAAd,CAAwBC,KAA/B;EACH;;EAEkB,aAANK,MAAM,CAACC,IAAD,EAAO;IACtB,MAAMd,KAAK,CAACe,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,CAAN;EACH;;EAEkB,aAANE,MAAM,CAACb,OAAD,EAAUc,WAAV,EAAuB;IACtC,MAAMjB,KAAK,CAACkB,KAAN,CAAYf,OAAZ,EAAqBc,WAArB,CAAN;EACH;;EAEkB,aAANE,MAAM,CAACC,cAAD,EAAiB;IAChC,MAAMpB,KAAK,CAACqB,MAAN,CAAaD,cAAb,CAAN;EACH;;AA9B4B"},"metadata":{},"sourceType":"module"}