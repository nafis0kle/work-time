{"ast":null,"code":"import TaskService from \"../API/TaskService\";\nimport DurationService from \"../API/DurationService\";\nconst EMPLOYEE_ID = 31;\n\nasync function startExecuting(task) {\n  if (task.status === 'NEW') {\n    await TaskService.update(task._links.self.href, {\n      status: 'RUNNING',\n      employeeId: EMPLOYEE_ID\n    });\n  }\n\n  let duration = await DurationService.getByUserAndIsLast(EMPLOYEE_ID);\n\n  if (duration === undefined) {\n    duration = await DurationService.create({\n      isLast: true,\n      startTime: new Date(),\n      employeeId: 31,\n      workDate: new Date(),\n      timeCount: 0,\n      taskUri: task._links.self.href\n    });\n  }\n\n  const workDate = new Date(duration.workDate);\n\n  if (workDate.getDay() === new Date().getDay()) {\n    await DurationService.update(duration._links.self.href, {\n      startTime: new Date()\n    });\n  } else {\n    await DurationService.update(duration._links.self.href, {\n      isLast: false\n    });\n    await DurationService.create({\n      isLast: true,\n      startTime: new Date(),\n      employeeId: EMPLOYEE_ID,\n      workDate: new Date(),\n      timeCount: 0,\n      taskUri: task._links.self.href\n    });\n  }\n}\n\nexport default startExecuting;","map":{"version":3,"names":["TaskService","DurationService","EMPLOYEE_ID","startExecuting","task","status","update","_links","self","href","employeeId","duration","getByUserAndIsLast","undefined","create","isLast","startTime","Date","workDate","timeCount","taskUri","getDay"],"sources":["C:/big-projects/work-time/work-time-front/src/business-logic/StartExecutingTask.js"],"sourcesContent":["import TaskService from \"../API/TaskService\";\r\nimport DurationService from \"../API/DurationService\";\r\n\r\nconst EMPLOYEE_ID = 31;\r\n\r\nasync function startExecuting(task) {\r\n    if (task.status === 'NEW') {\r\n        await TaskService.update(task._links.self.href, {status: 'RUNNING', employeeId: EMPLOYEE_ID});\r\n    }\r\n\r\n    let duration = await DurationService.getByUserAndIsLast(EMPLOYEE_ID);\r\n\r\n    if (duration === undefined) {\r\n        duration = await DurationService.create({\r\n            isLast: true, startTime: new Date(), employeeId: 31\r\n            , workDate: new Date(), timeCount: 0, taskUri: task._links.self.href\r\n        });\r\n    }\r\n\r\n    const workDate = new Date(duration.workDate);\r\n    if(workDate.getDay() === new Date().getDay()) {\r\n        await DurationService.update(duration._links.self.href, {startTime: new Date()});\r\n\r\n    } else {\r\n        await DurationService.update(duration._links.self.href, {isLast: false});\r\n        await DurationService.create({\r\n            isLast: true, startTime: new Date(), employeeId: EMPLOYEE_ID\r\n            , workDate: new Date(), timeCount: 0, taskUri :  task._links.self.href\r\n        });\r\n    }\r\n}\r\n\r\nexport default startExecuting;"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEA,eAAeC,cAAf,CAA8BC,IAA9B,EAAoC;EAChC,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAApB,EAA2B;IACvB,MAAML,WAAW,CAACM,MAAZ,CAAmBF,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiBC,IAApC,EAA0C;MAACJ,MAAM,EAAE,SAAT;MAAoBK,UAAU,EAAER;IAAhC,CAA1C,CAAN;EACH;;EAED,IAAIS,QAAQ,GAAG,MAAMV,eAAe,CAACW,kBAAhB,CAAmCV,WAAnC,CAArB;;EAEA,IAAIS,QAAQ,KAAKE,SAAjB,EAA4B;IACxBF,QAAQ,GAAG,MAAMV,eAAe,CAACa,MAAhB,CAAuB;MACpCC,MAAM,EAAE,IAD4B;MACtBC,SAAS,EAAE,IAAIC,IAAJ,EADW;MACCP,UAAU,EAAE,EADb;MAElCQ,QAAQ,EAAE,IAAID,IAAJ,EAFwB;MAEZE,SAAS,EAAE,CAFC;MAEEC,OAAO,EAAEhB,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiBC;IAF5B,CAAvB,CAAjB;EAIH;;EAED,MAAMS,QAAQ,GAAG,IAAID,IAAJ,CAASN,QAAQ,CAACO,QAAlB,CAAjB;;EACA,IAAGA,QAAQ,CAACG,MAAT,OAAsB,IAAIJ,IAAJ,GAAWI,MAAX,EAAzB,EAA8C;IAC1C,MAAMpB,eAAe,CAACK,MAAhB,CAAuBK,QAAQ,CAACJ,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;MAACO,SAAS,EAAE,IAAIC,IAAJ;IAAZ,CAAlD,CAAN;EAEH,CAHD,MAGO;IACH,MAAMhB,eAAe,CAACK,MAAhB,CAAuBK,QAAQ,CAACJ,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;MAACM,MAAM,EAAE;IAAT,CAAlD,CAAN;IACA,MAAMd,eAAe,CAACa,MAAhB,CAAuB;MACzBC,MAAM,EAAE,IADiB;MACXC,SAAS,EAAE,IAAIC,IAAJ,EADA;MACYP,UAAU,EAAER,WADxB;MAEvBgB,QAAQ,EAAE,IAAID,IAAJ,EAFa;MAEDE,SAAS,EAAE,CAFV;MAEaC,OAAO,EAAIhB,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiBC;IAFzC,CAAvB,CAAN;EAIH;AACJ;;AAED,eAAeN,cAAf"},"metadata":{},"sourceType":"module"}