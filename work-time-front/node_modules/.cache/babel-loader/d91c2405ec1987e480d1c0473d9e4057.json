{"ast":null,"code":"import DurationService from \"../API/DurationService\";\nconst EMPLOYEE_ID = 31;\n\nasync function FixExecuting() {\n  let duration = await DurationService.getByUserAndIsLast(EMPLOYEE_ID);\n\n  if (duration.taskUri !== null) {\n    const startTime = new Date(duration.startTime);\n    const diff = Date.now() - startTime.getTime();\n    const newTimeCount = duration.timeCount + diff;\n    await DurationService.update(duration._links.self.href, {\n      timeCount: newTimeCount,\n      startTime: new Date()\n    });\n    const workDate = new Date(duration.workDate);\n\n    if (workDate.getDay() === new Date().getDay()) {\n      await DurationService.update(duration._links.self.href, {\n        startTime: new Date(),\n        taskUri: task._links.self.href\n      });\n    } else {\n      await DurationService.update(duration._links.self.href, {\n        isLast: false\n      });\n      await DurationService.create({\n        isLast: true,\n        startTime: new Date(),\n        employeeId: EMPLOYEE_ID,\n        workDate: new Date(),\n        timeCount: 0,\n        taskUri: task._links.self.href\n      });\n    }\n  }\n\n  return duration;\n}\n\n_c = FixExecuting;\nexport default FixExecuting;\n\nvar _c;\n\n$RefreshReg$(_c, \"FixExecuting\");","map":{"version":3,"names":["DurationService","EMPLOYEE_ID","FixExecuting","duration","getByUserAndIsLast","taskUri","startTime","Date","diff","now","getTime","newTimeCount","timeCount","update","_links","self","href","workDate","getDay","task","isLast","create","employeeId"],"sources":["C:/big-projects/work-time/work-time-front/src/business-logic/FixTimeCount.js"],"sourcesContent":["import DurationService from \"../API/DurationService\";\r\n\r\nconst EMPLOYEE_ID = 31;\r\n\r\nasync function FixExecuting() {\r\n    let duration = await DurationService.getByUserAndIsLast(EMPLOYEE_ID);\r\n\r\n    if (duration.taskUri !== null) {\r\n        const startTime = new Date(duration.startTime);\r\n        const diff = Date.now() - startTime.getTime();\r\n        const newTimeCount = duration.timeCount + diff;\r\n\r\n        await DurationService.update(duration._links.self.href, {timeCount: newTimeCount\r\n            ,startTime : new Date()});\r\n\r\n        const workDate = new Date(duration.workDate);\r\n        if(workDate.getDay() === new Date().getDay()) {\r\n            await DurationService.update(duration._links.self.href, {startTime: new Date(),\r\n                taskUri : task._links.self.href});\r\n\r\n        } else {\r\n            await DurationService.update(duration._links.self.href, {isLast: false});\r\n            await DurationService.create({\r\n                isLast: true, startTime: new Date(), employeeId: EMPLOYEE_ID\r\n                , workDate: new Date(), timeCount: 0, taskUri :  task._links.self.href\r\n            });\r\n        }\r\n    }\r\n\r\n    return duration;\r\n}\r\n\r\nexport default FixExecuting;"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,wBAA5B;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEA,eAAeC,YAAf,GAA8B;EAC1B,IAAIC,QAAQ,GAAG,MAAMH,eAAe,CAACI,kBAAhB,CAAmCH,WAAnC,CAArB;;EAEA,IAAIE,QAAQ,CAACE,OAAT,KAAqB,IAAzB,EAA+B;IAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASJ,QAAQ,CAACG,SAAlB,CAAlB;IACA,MAAME,IAAI,GAAGD,IAAI,CAACE,GAAL,KAAaH,SAAS,CAACI,OAAV,EAA1B;IACA,MAAMC,YAAY,GAAGR,QAAQ,CAACS,SAAT,GAAqBJ,IAA1C;IAEA,MAAMR,eAAe,CAACa,MAAhB,CAAuBV,QAAQ,CAACW,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;MAACJ,SAAS,EAAED,YAAZ;MACnDL,SAAS,EAAG,IAAIC,IAAJ;IADuC,CAAlD,CAAN;IAGA,MAAMU,QAAQ,GAAG,IAAIV,IAAJ,CAASJ,QAAQ,CAACc,QAAlB,CAAjB;;IACA,IAAGA,QAAQ,CAACC,MAAT,OAAsB,IAAIX,IAAJ,GAAWW,MAAX,EAAzB,EAA8C;MAC1C,MAAMlB,eAAe,CAACa,MAAhB,CAAuBV,QAAQ,CAACW,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;QAACV,SAAS,EAAE,IAAIC,IAAJ,EAAZ;QACpDF,OAAO,EAAGc,IAAI,CAACL,MAAL,CAAYC,IAAZ,CAAiBC;MADyB,CAAlD,CAAN;IAGH,CAJD,MAIO;MACH,MAAMhB,eAAe,CAACa,MAAhB,CAAuBV,QAAQ,CAACW,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;QAACI,MAAM,EAAE;MAAT,CAAlD,CAAN;MACA,MAAMpB,eAAe,CAACqB,MAAhB,CAAuB;QACzBD,MAAM,EAAE,IADiB;QACXd,SAAS,EAAE,IAAIC,IAAJ,EADA;QACYe,UAAU,EAAErB,WADxB;QAEvBgB,QAAQ,EAAE,IAAIV,IAAJ,EAFa;QAEDK,SAAS,EAAE,CAFV;QAEaP,OAAO,EAAIc,IAAI,CAACL,MAAL,CAAYC,IAAZ,CAAiBC;MAFzC,CAAvB,CAAN;IAIH;EACJ;;EAED,OAAOb,QAAP;AACH;;KA1BcD,Y;AA4Bf,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}