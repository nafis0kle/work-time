{"ast":null,"code":"import TaskService from \"../API/TaskService\";\nimport DurationService from \"../API/DurationService\";\nconst EMPLOYEE_ID = 31;\n\nasync function startExecuting(task) {\n  if (task.status === 'NEW') {\n    await TaskService.update(task._links.self.href, {\n      status: 'RUNNING',\n      employeeId: EMPLOYEE_ID\n    });\n  }\n\n  let duration;\n  await DurationService.getByUserAndIsLast(EMPLOYEE_ID).then(d => {\n    duration = d;\n  }).catch(() => {\n    DurationService.create({\n      isLast: true,\n      startTime: new Date(),\n      employeeId: 31,\n      workDate: new Date(),\n      timeCount: 0,\n      taskUri: task._links.self.href\n    });\n  });\n\n  if (duration !== null && duration.workDate.getDay() === new Date().getDay()) {\n    await DurationService.update(duration._links.self.href, {\n      startTime: new Date()\n    });\n  } else {\n    await DurationService.update(duration._links.self.href, {\n      isLast: false\n    });\n    await DurationService.create({\n      isLast: true,\n      startTime: new Date(),\n      employeeId: EMPLOYEE_ID,\n      workDate: new Date(),\n      timeCount: 0,\n      taskUri: task._links.self.href\n    });\n  }\n}\n\nexport default startExecuting;","map":{"version":3,"names":["TaskService","DurationService","EMPLOYEE_ID","startExecuting","task","status","update","_links","self","href","employeeId","duration","getByUserAndIsLast","then","d","catch","create","isLast","startTime","Date","workDate","timeCount","taskUri","getDay"],"sources":["C:/big-projects/work-time/work-time-front/src/business-logic/StartExecutingTask.js"],"sourcesContent":["import TaskService from \"../API/TaskService\";\r\nimport DurationService from \"../API/DurationService\";\r\n\r\nconst EMPLOYEE_ID = 31;\r\n\r\nasync function startExecuting(task) {\r\n    if (task.status === 'NEW') {\r\n        await TaskService.update(task._links.self.href, {status: 'RUNNING', employeeId: EMPLOYEE_ID});\r\n    }\r\n\r\n    let duration;\r\n    await DurationService.getByUserAndIsLast(EMPLOYEE_ID).then((d) => {\r\n        duration = d;\r\n    }).catch(() => {\r\n        DurationService.create({\r\n            isLast: true, startTime: new Date(), employeeId: 31\r\n            , workDate: new Date(), timeCount: 0, taskUri :  task._links.self.href\r\n        });\r\n    });\r\n\r\n    if(duration !== null && (duration.workDate.getDay() === new Date().getDay())) {\r\n        await DurationService.update(duration._links.self.href, {startTime: new Date()});\r\n\r\n    } else {\r\n        await DurationService.update(duration._links.self.href, {isLast: false});\r\n        await DurationService.create({\r\n            isLast: true, startTime: new Date(), employeeId: EMPLOYEE_ID\r\n            , workDate: new Date(), timeCount: 0, taskUri :  task._links.self.href\r\n        });\r\n    }\r\n}\r\n\r\nexport default startExecuting;"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEA,eAAeC,cAAf,CAA8BC,IAA9B,EAAoC;EAChC,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAApB,EAA2B;IACvB,MAAML,WAAW,CAACM,MAAZ,CAAmBF,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiBC,IAApC,EAA0C;MAACJ,MAAM,EAAE,SAAT;MAAoBK,UAAU,EAAER;IAAhC,CAA1C,CAAN;EACH;;EAED,IAAIS,QAAJ;EACA,MAAMV,eAAe,CAACW,kBAAhB,CAAmCV,WAAnC,EAAgDW,IAAhD,CAAsDC,CAAD,IAAO;IAC9DH,QAAQ,GAAGG,CAAX;EACH,CAFK,EAEHC,KAFG,CAEG,MAAM;IACXd,eAAe,CAACe,MAAhB,CAAuB;MACnBC,MAAM,EAAE,IADW;MACLC,SAAS,EAAE,IAAIC,IAAJ,EADN;MACkBT,UAAU,EAAE,EAD9B;MAEjBU,QAAQ,EAAE,IAAID,IAAJ,EAFO;MAEKE,SAAS,EAAE,CAFhB;MAEmBC,OAAO,EAAIlB,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiBC;IAF/C,CAAvB;EAIH,CAPK,CAAN;;EASA,IAAGE,QAAQ,KAAK,IAAb,IAAsBA,QAAQ,CAACS,QAAT,CAAkBG,MAAlB,OAA+B,IAAIJ,IAAJ,GAAWI,MAAX,EAAxD,EAA8E;IAC1E,MAAMtB,eAAe,CAACK,MAAhB,CAAuBK,QAAQ,CAACJ,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;MAACS,SAAS,EAAE,IAAIC,IAAJ;IAAZ,CAAlD,CAAN;EAEH,CAHD,MAGO;IACH,MAAMlB,eAAe,CAACK,MAAhB,CAAuBK,QAAQ,CAACJ,MAAT,CAAgBC,IAAhB,CAAqBC,IAA5C,EAAkD;MAACQ,MAAM,EAAE;IAAT,CAAlD,CAAN;IACA,MAAMhB,eAAe,CAACe,MAAhB,CAAuB;MACzBC,MAAM,EAAE,IADiB;MACXC,SAAS,EAAE,IAAIC,IAAJ,EADA;MACYT,UAAU,EAAER,WADxB;MAEvBkB,QAAQ,EAAE,IAAID,IAAJ,EAFa;MAEDE,SAAS,EAAE,CAFV;MAEaC,OAAO,EAAIlB,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiBC;IAFzC,CAAvB,CAAN;EAIH;AACJ;;AAED,eAAeN,cAAf"},"metadata":{},"sourceType":"module"}